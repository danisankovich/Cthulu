var app=angular.module("Cthulu",["ui.router"]);app.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("/",{url:"/",templateUrl:"views/home.ejs",controller:"mainCtrl"}).state("state",{url:"/state/{state}",templateUrl:"views/state.ejs",controller:"stateCtrl"}).state("profile",{url:"/profile",templateUrl:"views/profile.ejs",controller:"profileCtrl"})}]),app.controller("mainCtrl",function($scope,$rootScope,$state,$http,userService){$(document).ready(function(){userService.getCurrentUser().success(function(data){$rootScope.currentUser=data}),$scope.login=function(user){$http.post("/users/login",user).success(function(user){$rootScope.currentUser=user,$("#loginModal").foundation("reveal","close")}).error(function(err){$scope.loginMessage="Incorrect Username/Password Combination"})},$scope.register=function(newUser){$scope.newUser=newUser,$http.post("/users/register",$scope.newUser).success(function(err,data){return err.hasOwnProperty("name")===!0?void sweetAlert("Uh Oh  ",err.message,"error"):err.hasOwnProperty("errmsg")?void sweetAlert("Uh Oh ",newUser.email+" is already registered","error"):($rootScope.currentUser=user,void $("#loginModal").foundation("reveal","close"))})},$scope.closeLogin=function(){$("#loginModal").foundation("reveal","close")},$scope.loginModal=function(){$("#loginModal").foundation("reveal","open")},$scope.toState=function(state){$state.go("state",{state:state})}})}),app.controller("profileCtrl",function($scope,$rootScope,$state,$http,userService){userService.getCurrentUser().success(function(data){$rootScope.currentUser=data})}),app.controller("stateCtrl",function($scope,$rootScope,$state,$http,userService){userService.getCurrentUser().success(function(data){$rootScope.currentUser=data}),$scope.toState=function(state){$state.go("state",{state:state})},$scope.whichState=$state.params.state}),app.service("userService",function($http){this.getCurrentUser=function(){return $http.get("/user").success(function(user){return user?user:void 0})}});